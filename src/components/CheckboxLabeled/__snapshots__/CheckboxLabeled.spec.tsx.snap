// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for Default 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for Disabled 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for DisabledSelected 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for HTMLElement 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for HTMLElementInAnArray 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for LabelAsChild 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
>
  <CheckboxLabeled.Label>
    <span>
      HTML element as Child
    </span>
  </CheckboxLabeled.Label>
</CheckboxLabeled>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for LabelAsProp 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for Selected 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;

exports[`CheckboxLabeled [common] example testing should match snapshot(s) for TextInAnArray 1`] = `
<CheckboxLabeled
  isDisabled={false}
  isIndeterminate={false}
  isSelected={false}
  onSelect={[Function]}
/>
`;
