// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 1.interactive 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="dark"
>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    key=".0"
    onClick={[Function]}
    style={
      Object {
        "margin": 10,
      }
    }
    type="button"
  >
    Get more data
  </Button>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    key=".1"
    onClick={[Function]}
    type="button"
  >
    Switch overlay color
  </Button>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 0,
        },
        Object {
          "x": "2015-01-02",
          "y": 0,
        },
        Object {
          "x": "2015-01-03",
          "y": 0,
        },
        Object {
          "x": "2015-01-04",
          "y": 0,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".2"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle="Revenue"
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 2.default 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 3.custom-message 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage
      key=".1"
    >
      <LoadingMessage.Icon>
        <LoadingIcon
          aspectRatio="xMidYMid meet"
          isBadge={false}
          isClickable={false}
          isDisabled={false}
          size={16}
          speed="slow"
          viewBox="0 0 16 16"
        />
      </LoadingMessage.Icon>
      <LoadingMessage.Title>
        Custom Title
      </LoadingMessage.Title>
      <LoadingMessage.Body>
        Custom Body
      </LoadingMessage.Body>
    </LoadingMessage>
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 3.custom-message 2`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage
      Body="Please wait"
      Icon={
        <LoadingIcon
          aspectRatio="xMidYMid meet"
          isBadge={false}
          isClickable={false}
          isDisabled={false}
          size={16}
          speed="fast"
          viewBox="0 0 16 16"
        />
      }
      Title="Enhancing..."
      key=".1"
    />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 4.no-title 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage
      Title={null}
      key=".1"
    />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 5.no-overlay 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={false}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;

exports[`LoadingIndicator [common] example testing should match snapshot(s) for 6.light-overlay 1`] = `
<OverlayWrapper
  className="lucid-LoadingIndicator"
  hasOverlay={true}
  isVisible={true}
  overlayKind="light"
>
  <BarChart
    data={
      Array [
        Object {
          "x": "2015-01-01",
          "y": 1,
        },
        Object {
          "x": "2015-01-02",
          "y": 2,
        },
        Object {
          "x": "2015-01-03",
          "y": 3,
        },
        Object {
          "x": "2015-01-04",
          "y": 5,
        },
      ]
    }
    hasLegend={false}
    hasToolTips={true}
    height={400}
    key=".0"
    margin={
      Object {
        "bottom": 50,
        "left": 80,
        "right": 20,
        "top": 10,
      }
    }
    palette={
      Array [
        "color-chart-0",
        "color-chart-1",
        "color-chart-2",
        "color-chart-3",
        "color-chart-4",
        "color-chart-5",
      ]
    }
    renderTooltipBody={null}
    width={1000}
    xAxisField="x"
    xAxisFormatter={[Function]}
    xAxisTextOrientation="horizontal"
    xAxisTickCount={null}
    xAxisTitle={null}
    xAxisTitleColor="#000"
    yAxisFields={
      Array [
        "y",
      ]
    }
    yAxisIsStacked={false}
    yAxisMin={0}
    yAxisTextOrientation="horizontal"
    yAxisTickCount={null}
    yAxisTitle={null}
    yAxisTitleColor="#000"
    yAxisTooltipFormatter={[Function]}
  />
  <OverlayWrapper.Message>
    <LoadingMessage />
  </OverlayWrapper.Message>
</OverlayWrapper>
`;
