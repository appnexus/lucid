// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-default 1`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Airplane Mode
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Airplane Mode
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-default 2`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Bluetooth
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Bluetooth
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-default 3`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Cellular Data
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Cellular Data
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-with-changing-labels 1`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Airplane Mode Activated
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-with-changing-labels 2`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Bluetooth Enabled
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-with-changing-labels 3`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Use Cellular Data
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for interactive-with-changing-labels 4`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Yes! I would like to receive updates, special offers, and other information from AppNexus and its subsidiaries.
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Yes! I would like to receive updates, special offers, and other information from AppNexus and its subsidiaries.
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for label-as-prop 1`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginRight": "5px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Just text
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for label-as-prop 2`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginRight": "5px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      <span>
        HTML element
      </span>
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for label-as-prop 3`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginRight": "5px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Text in an array
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for label-as-prop 4`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginRight": "5px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  />
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      <span
        key="1"
      >
        HTML element in an array
      </span>
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for states 1`] = `
<label
  className="lucid-SwitchLabeled"
  style={
    Object {
      "marginBottom": "3px",
      "marginRight": "13px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      (default props)
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      (default props)
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for states 2`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
      "marginRight": "13px",
    }
  }
>
  <Switch
    isDisabled={false}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Selected
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Selected
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for states 3`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-disabled"
  style={
    Object {
      "marginBottom": "3px",
      "marginRight": "13px",
    }
  }
>
  <Switch
    isDisabled={true}
    isIncludeExclude={false}
    isSelected={false}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Disabled
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Disabled
    </span>
  </CSSTransition>
</label>
`;

exports[`SwitchLabeled [common] example testing should match snapshot(s) for states 4`] = `
<label
  className="lucid-SwitchLabeled lucid-SwitchLabeled-is-disabled lucid-SwitchLabeled-is-selected"
  style={
    Object {
      "marginBottom": "3px",
      "marginRight": "13px",
    }
  }
>
  <Switch
    isDisabled={true}
    isIncludeExclude={false}
    isSelected={true}
    onSelect={[Function]}
  >
    <SwitchLabeled.Label>
      Disabled & selected
    </SwitchLabeled.Label>
  </Switch>
  <CSSTransition
    className="lucid-SwitchLabeled-text"
    classNames="lucid-SwitchLabeled-text"
    in={true}
    style={
      Object {
        "position": "relative",
      }
    }
    timeout={100}
    unmountOnExit={true}
  >
    <span
      key="0"
    >
      Disabled & selected
    </span>
  </CSSTransition>
</label>
`;
