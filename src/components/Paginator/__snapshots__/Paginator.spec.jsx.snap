// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Paginator [common] example testing should match snapshot(s) for 1.basic 1`] = `
<div
  className="lucid-Paginator"
>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 2.page-size-selector 1`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "direction": "up",
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="25"
      >
        25
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 3.disabled 1`] = `
<div
  className="lucid-Paginator"
>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={true}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 3.disabled 2`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "direction": "up",
        }
      }
      hasReset={false}
      isDisabled={true}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={true}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 1`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-total-count"
  >
    12,321,313
     
    Objects
  </div>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "direction": "up",
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 2`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "direction": "up",
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 3`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-total-count"
  >
    1
     
    singular object
  </div>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "ContextMenu": Object {
            "alignment": "start",
            "direction": "down",
            "directonOffset": 0,
            "getAlignmentOffset": [Function],
            "isExpanded": true,
            "minWidthOffset": 0,
            "onClickOut": null,
            "portalId": null,
          },
          "alignment": "start",
          "direction": "down",
          "flyOutStyle": Object {
            "maxHeight": "18em",
          },
          "focusedIndex": null,
          "isDisabled": false,
          "isExpanded": false,
          "onCollapse": [Function],
          "onExpand": [Function],
          "onFocusNext": [Function],
          "onFocusOption": [Function],
          "onFocusPrev": [Function],
          "onSelect": [Function],
          "optionContainerStyle": Object {},
          "portalId": "",
          "selectedIndices": Array [],
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 4`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-total-count"
  >
    2
     
    is more than one
  </div>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "ContextMenu": Object {
            "alignment": "start",
            "direction": "down",
            "directonOffset": 0,
            "getAlignmentOffset": [Function],
            "isExpanded": true,
            "minWidthOffset": 0,
            "onClickOut": null,
            "portalId": null,
          },
          "alignment": "start",
          "direction": "down",
          "flyOutStyle": Object {
            "maxHeight": "18em",
          },
          "focusedIndex": null,
          "isDisabled": false,
          "isExpanded": false,
          "onCollapse": [Function],
          "onExpand": [Function],
          "onFocusNext": [Function],
          "onFocusOption": [Function],
          "onFocusPrev": [Function],
          "onSelect": [Function],
          "optionContainerStyle": Object {},
          "portalId": "",
          "selectedIndices": Array [],
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 5`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-total-count"
  >
    20
     
    dogs
  </div>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "ContextMenu": Object {
            "alignment": "start",
            "direction": "down",
            "directonOffset": 0,
            "getAlignmentOffset": [Function],
            "isExpanded": true,
            "minWidthOffset": 0,
            "onClickOut": null,
            "portalId": null,
          },
          "alignment": "start",
          "direction": "down",
          "flyOutStyle": Object {
            "maxHeight": "18em",
          },
          "focusedIndex": null,
          "isDisabled": false,
          "isExpanded": false,
          "onCollapse": [Function],
          "onExpand": [Function],
          "onFocusNext": [Function],
          "onFocusOption": [Function],
          "onFocusPrev": [Function],
          "onSelect": [Function],
          "optionContainerStyle": Object {},
          "portalId": "",
          "selectedIndices": Array [],
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;

exports[`Paginator [common] example testing should match snapshot(s) for 4.show-object-count 6`] = `
<div
  className="lucid-Paginator"
>
  <div
    className="lucid-Paginator-total-count"
  >
    --20--
     
    objects
  </div>
  <div
    className="lucid-Paginator-page-size-container"
  >
    <span
      className="lucid-Paginator-rows-per-page-label"
    >
      Rows per page:
    </span>
    <SingleSelect
      DropMenu={
        Object {
          "ContextMenu": Object {
            "alignment": "start",
            "direction": "down",
            "directonOffset": 0,
            "getAlignmentOffset": [Function],
            "isExpanded": true,
            "minWidthOffset": 0,
            "onClickOut": null,
            "portalId": null,
          },
          "alignment": "start",
          "direction": "down",
          "flyOutStyle": Object {
            "maxHeight": "18em",
          },
          "focusedIndex": null,
          "isDisabled": false,
          "isExpanded": false,
          "onCollapse": [Function],
          "onExpand": [Function],
          "onFocusNext": [Function],
          "onFocusOption": [Function],
          "onFocusPrev": [Function],
          "onSelect": [Function],
          "optionContainerStyle": Object {},
          "portalId": "",
          "selectedIndices": Array [],
        }
      }
      hasReset={false}
      isDisabled={false}
      isInvisible={true}
      isSelectionHighlighted={false}
      selectedIndex={0}
      showIcon={true}
    >
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="10"
      >
        10
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="50"
      >
        50
      </SingleSelect.Option>
      <SingleSelect.Option
        isDisabled={false}
        isHidden={false}
        isWrapped={true}
        key="100"
      >
        100
      </SingleSelect.Option>
    </SingleSelect>
  </div>
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={true}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="left"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
  <TextField
    debounceLevel={500}
    isDisabled={false}
    isMultiLine={false}
    lazyLevel={1000}
    onBlur={[Function]}
    onChange={[Function]}
    onChangeDebounced={[Function]}
    onKeyDown={[Function]}
    onSubmit={[Function]}
    rows={5}
    value={1}
  />
  <Button
    hasOnlyIcon={true}
    isActive={false}
    isDisabled={false}
    kind="invisible"
    onClick={[Function]}
    type="button"
  >
    <ArrowIcon
      aspectRatio="xMidYMid meet"
      color="primary"
      direction="right"
      isClickable={false}
      isDisabled={false}
      onClick={[Function]}
      onSelect={[Function]}
      size={16}
      viewBox="0 0 16 16"
    />
  </Button>
</div>
`;
