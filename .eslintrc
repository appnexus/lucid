{
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier",
		"prettier/react",
		"prettier/@typescript-eslint"
	],
	"env": {
		"node": true,
		"es6": true,
		"jest": true,
		"browser": true
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"react",
		"lodash",
		"promise",
	],
	"parserOptions": {
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"rules": {
		"constructor-super": 2,
		"jsx-quotes": [2, "prefer-single"],
		"lodash/chaining": 0,
		"no-case-declarations": 2,
		"no-class-assign": 2,
		"no-cond-assign": 2,
		"no-console": [1, { "allow": ["warn", "error", "info"] }],
		"no-constant-condition": 2,
		"no-empty": 2,
		"no-empty-pattern": 2,
		"no-extra-semi": 0,
		"no-global-assign": 2,
		"no-inner-declarations": 2,
		"no-invalid-regexp": 2,
		"no-mixed-requires": 2,
		"no-mixed-spaces-and-tabs": 0,
		"no-negated-in-lhs": 2,
		"no-new-require": 2,
		"no-path-concat": 2,
		"no-proto": 2,
		"no-regex-spaces": 2,
		"no-restricted-modules": [2, "sys", "_linklist"],
		"no-sparse-arrays": 2,
		"no-undef": 2,
		"no-unexpected-multiline": 0,
		"no-unsafe-finally": 2,
		"no-unsafe-negation": 2,
		"no-unused-vars": "off", // we are using the typescript plugin instead
		"@typescript-eslint/no-unused-vars": [2, { "args": "none" }], // this ignores the unused var error for TS interfaces
		"@typescript-eslint/no-use-before-define": 0,
		"@typescript-eslint/camelcase": 1,
		"@typescript-eslint/interface-name-prefix": 0,
		"@typescript-eslint/array-type": [2, { "default": "array-simple" }],
		"@typescript-eslint/explicit-member-accessibility": 0,
		"@typescript-eslint/no-empty-interface": 1,
		"@typescript-eslint/explicit-function-return-type": 0,
		"prefer-const": 2,
		"promise/always-return": 0,
		"promise/catch-or-return": 2,
		"promise/param-names": 2,
		"quote-props": 0,
		"react/jsx-uses-react": 2,
		"react/jsx-uses-vars": 2,
		"react/prop-types": 2,
		"react/react-in-jsx-scope": 2,
		"require-yield": 2,
		"react/display-name": "off", // we have this all over our storybook examples
		"react/no-unescaped-entities": "off", // this is purely to avoid changing all string quotemarks in JSX to their ampersand code equivalents

		// Should fix these
		"@typescript-eslint/ban-ts-ignore": "warn",
		"@typescript-eslint/no-inferrable-types": "warn",
		"@typescript-eslint/no-empty-function": "warn"
	}
}
